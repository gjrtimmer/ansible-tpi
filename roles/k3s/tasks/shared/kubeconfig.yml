# code: language=ansible
---
- name: "Set Cluster Init Node"
  tags: [kubeconfig]
  ansible.builtin.set_fact:
    is_cluster_init_node: "{{ inventory_hostname == k3s.profiles[profile].cluster_init_node }}"

- name: Find matching zone for local_ip
  tags: [kubeconfig]
  ansible.builtin.set_fact:
    local_ip: "{{ item.value.nodes[inventory_hostname] }}"
    matched_zone: "{{ item.key }}"
  loop: "{{ network.zones | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when:
    - item.value.profile == profile
    - inventory_hostname in item.value.nodes
  register: matched_zones

- name: Read kubeconfig
  when: is_cluster_init_node
  tags: [kubeconfig]
  ansible.builtin.command:
    cmd: cat /etc/rancher/k3s/k3s.yaml
  become: true
  register: kube_config
  changed_when: false
  run_once: true

- name: Create Directory .kube
  when: is_cluster_init_node
  tags: [kubeconfig]
  become: true
  become_user: ubuntu
  ansible.builtin.file:
    path: "$HOME/.kube"
    state: directory
    mode: "0755"

- name: Write kubeconfig to $HOME/.kube/config
  tags: [kubeconfig]
  become: true
  become_user: ubuntu
  ansible.builtin.copy:
    content: "{{ kube_config.stdout | regex_replace('127.0.0.1', inventory_hostname) }}"
    dest: "$HOME/.kube/config"
    mode: "0600"
  run_once: true

- name: Create Directory .kube
  when: is_cluster_init_node
  tags: [kubeconfig]
  delegate_to: localhost
  ansible.builtin.file:
    path: "$HOME/.kube"
    state: directory
    mode: "0755"

- name: Write kubeconfig to $HOME/.kube/config
  delegate_to: localhost
  tags: [kubeconfig]
  ansible.builtin.copy:
    content: "{{ kube_config.stdout | regex_replace('127.0.0.1', inventory_hostname) }}"
    dest: "$HOME/.kube/config"
    mode: "0600"
  run_once: true
