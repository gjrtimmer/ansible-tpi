# code: language=ansible
# roles/k3s/tasks/shared/k3s.yml
---
- name: Set cluster-init node fact
  ansible.builtin.set_fact:
    is_cluster_init_node: "{{ inventory_hostname == k3s.cluster_init_node }}"

- name: Set cluster-init node fact
  ansible.builtin.set_fact:
    is_cluster_init_node: "{{ inventory_hostname == k3s.cluster_init_node }}"
    local_ip: "{{ ansible_host }}" # Use local IP directly

- name: Build K3s disable flags from k3s.disable list
  ansible.builtin.set_fact:
    k3s_disable_flags: "{{ k3s.disable | map('regex_replace', '^', '--disable ') | join(' ') }}"

- name: Build K3s server-specific arguments from k3s.args.server
  ansible.builtin.set_fact:
    k3s_server_args: "{{ k3s.args.server | default([]) | map('regex_replace', '^', '--') | join(' ') }}"

- name: Build K3s agent-specific arguments from k3s.args.agent
  ansible.builtin.set_fact:
    k3s_agent_args: "{{ k3s.args.agent | default([]) | map('regex_replace', '^', '--') | join(' ') }}"

- name: Build K3s data-dir argument
  ansible.builtin.set_fact:
    k3s_data_dir_arg: "{{ '--data-dir ' + k3s.data_dir if k3s.data_dir is defined else '' }}"

- name: Install and configure K3s server (control-plane + worker) - Cluster-init node # noqa: command-instead-of-module risky-shell-pipe
  when: is_cluster_init_node
  become: true
  ansible.builtin.shell:
    cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s.version }} K3S_TOKEN={{ k3s_token }} sh -s - server --cluster-init {{ k3s_disable_flags }} {{ k3s_server_args }} {{ k3s_data_dir_arg }}
  args:
    creates: /usr/local/bin/k3s

- name: Join K3s worker nodes to control-plane # noqa: command-instead-of-module risky-shell-pipe
  when: not is_cluster_init_node
  become: true
  ansible.builtin.shell:
    cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ k3s.version }} K3S_TOKEN={{ k3s_token }} K3S_URL=https://{{ hostvars[k3s.cluster_init_node].ip_address }}:6443 sh -s - agent {{ k3s_disable_flags }} {{ k3s_agent_args }} {{ k3s_data_dir_arg }}
  args:
    creates: /usr/local/bin/k3s

- name: Create K3s config directory
  become: true
  ansible.builtin.file:
    path: "{{ k3s.config_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Write K3s config file
  become: true
  ansible.builtin.template:
    src: k3s-config.yaml.j2
    dest: "{{ k3s.config_dir }}/config.yaml"
    mode: "0644"

- name: Enable and start K3s service
  become: true
  ansible.builtin.systemd:
    name: k3s
    enabled: true
    state: started
    daemon_reload: true
