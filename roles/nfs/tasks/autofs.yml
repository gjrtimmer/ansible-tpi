---
- name: Ensure autofs is installed
  tags: [autofs]
  become: true
  ansible.builtin.apt:
    name: autofs
    state: present

- name: Remove deprecated autofs map files
  tags: [autofs]
  become: true
  ansible.builtin.find:
    paths: /etc
    patterns: "auto.nfs.*"
    excludes: "auto.nfs"
  register: deprecated_maps

- name: Delete old autofs map files
  tags: [autofs]
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ deprecated_maps.files }}"

- name: Create auto.master.d directory if needed
  tags: [autofs]
  become: true
  ansible.builtin.file:
    path: /etc/auto.master.d
    state: directory
    mode: "0755"

  # Initialize mountlist as an empty list
- name: Build mount list with fallback name
  tags: [autofs]
  ansible.builtin.set_fact:
    mountlist: []

- name: Append mount with defaults applied
  tags: [autofs]
  ansible.builtin.set_fact:
    mountlist: >-
      {{ mountlist + [{
        'name': (mount.name | default(mount.local | basename)),
        'local': mount.local,
        'remote': mount.remote,
        'server': server.server,
        'label': server.label,
        'options': (mount.options | default(server.options | default('rw,sync,nosuid,noatime,vers=4,hard,proto=tcp,timeo=30'))),
        'timeout': (mount.timeout | default(server.timeout | default(60)))
      }] }}
  loop: "{{ autofs | subelements('mounts') }}"
  loop_control:
    label: "{{ item[1].local }}"
  vars:
    server: "{{ item[0] }}"
    mount: "{{ item[1] }}"

- name: DEBUG final mountlist
  tags: [autofs]
  ansible.builtin.debug:
    var: mountlist

- name: Generate per-label auto.nfs maps
  tags: [autofs]
  become: true
  ansible.builtin.copy:
    dest: "/etc/auto.nfs.{{ item }}"
    content: |
      {% for entry in mountlist | selectattr('label', 'equalto', item) %}
      {{ entry.name }} -fstype=nfs,{{ entry.options }} {{ entry.server }}:{{ entry.remote }}
      {% endfor %}
    mode: "0644"
  loop: "{{ mountlist | map(attribute='label') | unique | list }}"

- name: Configure autofs master map
  tags: [autofs]
  become: true
  ansible.builtin.copy:
    dest: /etc/auto.master.d/nfs.autofs
    content: |
      {% for label in mountlist | map(attribute='label') | unique | list %}
      /mnt/nfs/{{ label }} /etc/auto.nfs.{{ label }} --ghost --timeout=3600
      {% endfor %}
    mode: "0644"

- name: Restart autofs
  tags: [autofs]
  become: true
  ansible.builtin.systemd:
    name: autofs
    state: restarted
    enabled: true
