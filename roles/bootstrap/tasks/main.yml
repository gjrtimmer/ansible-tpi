# code: language=ansible
---
- name: Bootstrap
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: localhost
  tags: [bootstrap]
  block:
    - name: Power Off Node
      ansible.builtin.import_role:
        name: tpi
        tasks_from: power-off.yml

    - name: TPI Client Wait
      ansible.builtin.pause:
        seconds: 1

- name: Mount Storage
  when: >
    hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
    and
    not ansible_check_mode
  tags: [bootstrap]
  ansible.builtin.import_role:
    name: tpi
    tasks_from: msd-mount.yml

- name: Generate user-data {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: localhost
  tags: [bootstrap]
  ansible.builtin.template:
    src: user-data.j2
    dest: /tmp/tpi/user-data
    mode: "0644"
  vars:
    prefix: "{{ hostvars[hostvars[inventory_hostname]['bmc']]['ansible_ssh_prefix'] }}"

- name: Copy user-data to {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  vars:
    src: /tmp/tpi/user-data
    dest: /mnt/node/cloud/user-data
  ansible.builtin.import_role:
    name: tpi
    tasks_from: scp-send.yml

- name: Generate cloud.cfg {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: localhost
  tags: [bootstrap]
  ansible.builtin.template:
    src: cloud.cfg.j2
    dest: /tmp/tpi/cloud.cfg
    mode: "0644"
  vars:
    prefix: "{{ hostvars[hostvars[inventory_hostname]['bmc']]['ansible_ssh_prefix'] }}"

- name: Copy cloud.cfg to {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  vars:
    src: /tmp/tpi/cloud.cfg
    dest: /mnt/node/root/etc/cloud/cloud.cfg
  ansible.builtin.import_role:
    name: tpi
    tasks_from: scp-send.yml

- name: Default Network Config {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: localhost
  tags: [bootstrap]
  ansible.builtin.copy:
    src: 50-cloud-init.yaml
    dest: /tmp/tpi/50-cloud-init.yaml
    mode: "0700"
  vars:
    prefix: "{{ hostvars[hostvars[inventory_hostname]['bmc']]['ansible_ssh_prefix'] }}"

- name: Copy Default Network Config {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  vars:
    src: /tmp/tpi/50-cloud-init.yaml
    dest: /mnt/node/root/etc/netplan/50-cloud-init.yaml
  ansible.builtin.import_role:
    name: tpi
    tasks_from: scp-send.yml

- name: Wipe cloud-init {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: "{{ hostvars[inventory_hostname]['bmc'] }}"
  tags: [bootstrap]
  ansible.builtin.raw: rm -rf /mnt/node/root/var/lib/cloud
  changed_when: true

- name: Unmount Storage
  when: >
    hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
    and
    not ansible_check_mode
  tags: [bootstrap]
  ansible.builtin.import_role:
    name: tpi
    tasks_from: msd-umount.yml

- name: TPI Client Wait
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  ansible.builtin.pause:
    seconds: 1

- name: Power On Node
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  ansible.builtin.import_role:
    name: tpi
    tasks_from: power-on.yml

  # If the user wants to assign the node an IP address
  # through DHCP reservation then this option will end
  # the playbook so the user can do this on first boot
  # of the node.
  #
  # It is advised to rerun the bootstrap after a
  # DHCP reservation has been made.
- name: DHCP Reservation
  when: >
    hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
    and
    dhcp_reservation
  tags: [bootstrap]
  ansible.builtin.meta: end_play

- name: Wait on {{ inventory_hostname }}
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  delegate_to: localhost
  tags: [bootstrap]
  ansible.builtin.wait_for:
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    port: 22
  retries: 20
  delay: 3

- name: Add known_host
  when: hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
  tags: [bootstrap]
  vars:
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
  ansible.builtin.include_role:
    name: ssh
    tasks_from: known_hosts.yml

- name: Add SSH config {{ inventory_hostname }}
  when: >
    hostvars[inventory_hostname]['type'] | upper != 'NVIDIA'
    and
    inventory_hostname in groups.nodes
  tags: [bootstrap]
  vars:
    host: "{{ inventory_hostname }}"
    hostname: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    username: "{{ users.default }}"
    key: "{{ hostvars[hostvars[inventory_hostname]['bmc']]['ansible_ssh_prefix'] }}.{{ users.default }}.key"
  ansible.builtin.include_role:
    name: ssh
    tasks_from: config.yml
