# code: language=ansible
---
- name: Write Tailscale admin API key to /etc/tailscale/api.key
  ansible.builtin.copy:
    content: "{{ tailscale.api.admin.key }}"
    dest: /etc/tailscale/api.key
    owner: root
    group: root
    mode: "0600"
  no_log: true
  register: admin_key
  tags: [tailscale]

- name: Check admin key metadata file exists
  tags: [tailscale]
  ansible.builtin.stat:
    path: "/etc/tailscale/api.key.meta"
  register: admin_key_meta
  changed_when: false

- name: Update admin key metadata file # noqa: no-handler
  when: not admin_key_meta.stat.exists | bool
  tags: [tailscale]
  ansible.builtin.copy:
    content: "{{ ansible_date_time.iso8601 }}"
    dest: /etc/tailscale/api.key.meta
    owner: root
    group: root
    mode: "0600"

- name: Read current admin API key from disk
  ansible.builtin.slurp:
    src: /etc/tailscale/api.key
  register: existing_admin_key
  ignore_errors: true
  no_log: true
  tags: [tailscale]

- name: Update admin key metadata file
  ansible.builtin.copy:
    content: "{{ ansible_date_time.iso8601 }}"
    dest: /etc/tailscale/api.key.meta
    owner: root
    group: root
    mode: "0600"
  when: >
    existing_admin_key.content is defined
    and
    (existing_admin_key.content | b64decode).strip() != tailscale.api.admin.key
  register: admin_key_updated
  tags: [tailscale]

- name: Re-authenticate Tailscale and restart service if admin key updated
  when: >
    admin_key_updated is defined
    and
    admin_key_updated.changed
  tags: [tailscale]
  ansible.builtin.command:
    cmd: /usr/local/bin/tailscale-renew.sh
  changed_when: false
  notify: "tailscale : restart"

- name: Warn if admin key metadata file is missing
  when: not admin_key_meta.stat.exists | bool
  tags: [tailscale]
  ansible.builtin.debug:
    msg: "Admin key metadata file is missing. Please create /etc/tailscale/api.key.meta with ISO8601 timestamp of key creation."

- name: Fail if admin key is older than 150 days
  ansible.builtin.command: cat /etc/tailscale/api.key.meta
  register: admin_key_creation
  changed_when: false
  failed_when: >
    (admin_key_creation.stdout | to_datetime('%Y-%m-%dT%H:%M:%SZ') | community.general.to_epoch | int) <
    ((ansible_date_time.epoch | int) - 12960000)
  when: lookup('ansible.builtin.file', '/etc/tailscale/api.key.meta', errors='ignore')
  tags: [tailscale]

- name: Deploy Tailscale renew script
  ansible.builtin.template:
    src: tailscale-renew.sh.j2
    dest: /usr/local/bin/tailscale-renew.sh
    owner: root
    group: root
    mode: "0755"
  tags: [tailscale]

- name: Deploy systemd service for Tailscale key renewal
  ansible.builtin.template:
    src: tailscale-renew.service.j2
    dest: /etc/systemd/system/tailscale-renew.service
    owner: root
    group: root
    mode: "0644"
  tags: [tailscale]

- name: Deploy systemd timer for Tailscale key renewal
  ansible.builtin.template:
    src: tailscale-renew.timer.j2
    dest: /etc/systemd/system/tailscale-renew.timer
    owner: root
    group: root
    mode: "0644"
  tags: [tailscale]

- name: Enable and start Tailscale renew timer
  ansible.builtin.systemd:
    name: tailscale-renew.timer
    enabled: true
    state: started
    daemon_reload: true
  tags: [tailscale]

- name: Validate that Tailscale node is connected
  ansible.builtin.command: tailscale status --json
  register: tailscale_status
  changed_when: false
  failed_when: tailscale_status.rc != 0
  tags: [tailscale]
