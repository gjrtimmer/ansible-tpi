# code: language=ansible
---
- name: Check if adduser exists
  ansible.builtin.command: which adduser
  register: adduser_check
  ignore_errors: true
  changed_when: false

- name: Check if useradd exists
  ansible.builtin.command: which useradd
  register: useradd_check
  ignore_errors: true
  changed_when: false

- name: Set fact for busybox-like system
  when: adduser_check.rc == 0 and useradd_check.rc != 0
  ansible.builtin.set_fact:
    is_busybox_user_mgmt: true

- name: Check if user 'ansible' exists
  when: is_busybox_user_mgmt | default(false)
  ansible.builtin.command: id -u ansible
  register: ansible_user_check
  failed_when: false
  changed_when: false

- name: Check if group 'ansible' exists
  when: is_busybox_user_mgmt | default(false)
  ansible.builtin.command: getent group ansible
  register: group_check
  failed_when: false
  changed_when: false

- name: Create group 'ansible' manually (BusyBox)
  when:
    - is_busybox_user_mgmt | default(false)
    - group_check.rc != 0
    - ansible_user_check.rc != 0
  ansible.builtin.command: addgroup ansible
  changed_when: true

- name: Create ansible user (BusyBox / OpenWrt)
  when:
    - is_busybox_user_mgmt | default(false)
    - ansible_user_check.rc != 0
  ansible.builtin.command: adduser -G ansible -D -s /bin/bash -h /home/ansible ansible
  args:
    creates: /home/ansible

- name: Ensure /home/ansible exists (BusyBox)
  when: is_busybox_user_mgmt | default(false)
  ansible.builtin.file:
    path: /home/ansible
    state: directory
    owner: ansible
    group: ansible
    mode: "0755"

- name: Ensure ansible user exists
  when: not is_busybox_user_mgmt | default(false)
  become: true
  ansible.builtin.user:
    name: ansible
    groups: sudo
    shell: /bin/bash
    state: present
    create_home: true
    comment: "Ansible"

- name: Set Facts
  ansible.builtin.set_fact:
    prefix: "{{ inventory_hostname }}"
    user: "{{ users.provision }}"

- name: Generate User SSH Keys
  ansible.builtin.include_role:
    name: ssh
    tasks_from: keys.yml

- name: Add ansible public key to authorized_keys
  become: true
  ansible.posix.authorized_key:
    user: ansible
    key: "{{ lookup('file', '~/.ssh/tpi/tpi.ansible.key.pub') }}"
    state: present

- name: Check if user 'ubuntu' exists
  ansible.builtin.command: id -u ubuntu
  register: ubuntu_user_check
  failed_when: false
  changed_when: false

- name: Add ubuntu public key to authorized_keys
  when: ubuntu_user_check.rc == 0
  become: true
  ansible.posix.authorized_key:
    user: ubuntu
    key: "{{ lookup('file', '~/.ssh/tpi/tpi.ubuntu.key.pub') }}"
    state: present

- name: Add sudoers entry for ansible
  become: true
  ansible.builtin.copy:
    dest: /etc/sudoers.d/ansible
    content: "ansible ALL=(ALL) NOPASSWD:ALL\n"
    mode: "0440"
    validate: "visudo -cf %s"

- name: Configure SSH client
  vars:
    host: "{{ inventory_hostname }}"
    hostname: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
    username: "{{ users.provision }}"
    key: "{{ inventory_hostname }}.ansible.key"
  ansible.builtin.include_role:
    name: ssh
    tasks_from: config.yml

- name: Add host to known_hosts
  vars:
    host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
  ansible.builtin.include_role:
    name: ssh
    tasks_from: known_hosts.yml
